{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, TextField, Button } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async () => {\n    if (!prompt.trim()) return;\n    const newMessage = {\n      text: prompt,\n      sender: 'user'\n    };\n    setMessages([...messages, newMessage]);\n\n    // Prepare the data to send to the backend\n    const data = {\n      prompt: prompt\n    };\n\n    // Make a POST request to your FastAPI backend\n    const response = await fetch('http://localhost:8000/generate-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const responseData = await response.json();\n    if (response.ok) {\n      const replyMessage = {\n        text: responseData.generated_email,\n        sender: 'ai'\n      };\n      setMessages([...messages, newMessage, replyMessage]);\n    } else {\n      console.error('Failed to generate email');\n    }\n    setPrompt(''); // Clear input after sending\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: \"chat-heading\",\n        children: \"Personalized Email Outreach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"messages-container\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"message-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"prompt\",\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 2,\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your message here...\",\n          className: \"prompt-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"72yZ822dUf9AM5uKiKOmkMTsfs8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Box","TextField","Button","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","messages","setMessages","sendMessage","trim","newMessage","text","sender","data","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","replyMessage","generated_email","console","error","maxWidth","className","children","elevation","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","id","fullWidth","multiline","rows","value","onChange","e","target","placeholder","color","onClick","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, TextField, Button } from '@mui/material';\nimport './App.css';\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const sendMessage = async () => {\n        if (!prompt.trim()) return;\n        const newMessage = { text: prompt, sender: 'user' };\n        setMessages([...messages, newMessage]);\n\n        // Prepare the data to send to the backend\n        const data = { prompt: prompt };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data),\n        });\n\n        const responseData = await response.json();\n        if (response.ok) {\n            const replyMessage = { text: responseData.generated_email, sender: 'ai' };\n            setMessages([...messages, newMessage, replyMessage]);\n        } else {\n            console.error('Failed to generate email');\n        }\n        setPrompt(''); // Clear input after sending\n    };\n\n    return (\n        <Container maxWidth=\"sm\" className=\"chat-container\">\n            <Paper elevation={3} className=\"paper\">\n                <Typography variant=\"h5\" className=\"chat-heading\">\n                    Personalized Email Outreach\n                </Typography>\n                <Box className=\"messages-container\">\n                    {messages.map((message, index) => (\n                        <div key={index} className={`message ${message.sender}`}>\n                            {message.text}\n                        </div>\n                    ))}\n                </Box>\n                <Box className=\"message-input-container\">\n                    <TextField\n                        id=\"prompt\"\n                        variant=\"outlined\"\n                        fullWidth\n                        multiline\n                        rows={2}\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        placeholder=\"Type your message here...\"\n                        className=\"prompt-input\"\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendMessage} className=\"send-button\">\n                        Send\n                    </Button>\n                </Box>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}