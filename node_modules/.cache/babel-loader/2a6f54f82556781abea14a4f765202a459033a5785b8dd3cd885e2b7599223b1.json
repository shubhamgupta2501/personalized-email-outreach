{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { BrowserRouter as Router, Route, Link, Routes, useNavigate } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [newRecipient, setNewRecipient] = useState('');\n  const [generatedEmail, setGeneratedEmail] = useState('');\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n\n  /*\n  const generateEmail = async () => {\n      // Prepare the data to send to the backend\n      const data = {\n          prompt: prompt,\n      };\n       // Make a POST request to your FastAPI backend\n      const response = await fetch('http://localhost:8000/generate-email', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data),\n      });\n       if (response.ok) {\n          const responseData = await response.json();\n          setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n           // Navigate to the new page\n          window.location.href = '/generated-email';\n      } else {\n          // Handle errors here\n          console.error('Failed to generate email');\n      }\n  };\n  */\n\n  const generateEmail = async () => {\n    // Prepare the data to send to the backend\n    const data = {\n      prompt: prompt\n    };\n    if (prompt) {\n      const responseData = prompt;\n      generatedEmail = prompt;\n      setGeneratedEmail(responseData); // Update generatedEmail with data from the backend\n\n      // Navigate to the new page\n      window.location.href = '/generated-email';\n    } else {\n      // Handle errors here\n      console.error('Failed to generate email');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        className: \"page-container\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          className: \"paper\",\n          children: [/*#__PURE__*/_jsxDEV(PromptInput, {\n            prompt: prompt,\n            setPrompt: setPrompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generate-button-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"generate-button-text\",\n              children: \"Generate Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: generateEmail,\n              className: \"generate-button\",\n              startIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/generated-email\",\n              element: /*#__PURE__*/_jsxDEV(GeneratedEmailPage, {\n                generatedEmail: generatedEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8gZgm0ZSOGmO/uFdDCjL4SuJbpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Box","Button","IconButton","PromptInput","RecipientList","GeneratedEmail","Header","ArrowForwardIcon","BrowserRouter","Router","Route","Link","Routes","useNavigate","GeneratedEmailPage","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","newRecipient","setNewRecipient","generatedEmail","setGeneratedEmail","addRecipient","removeRecipient","index","updatedRecipientNames","splice","generateEmail","data","responseData","window","location","href","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","className","elevation","variant","color","onClick","startIcon","path","element","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { BrowserRouter as Router, Route, Link, Routes, useNavigate } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    /*\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n            window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n    */\n\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n\n        if (prompt) {\n            const responseData = prompt;\n            generatedEmail = prompt;\n            setGeneratedEmail(responseData); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n            window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n\n    return (\n        <Router>\n            <div>\n                <Header />\n                <Container maxWidth=\"md\" className=\"page-container\">\n                    <Paper elevation={3} className=\"paper\">\n                        <PromptInput prompt={prompt} setPrompt={setPrompt} />\n                        <div className=\"generate-button-div\">\n                            <span className=\"generate-button-text\">Generate Email</span>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={generateEmail}\n                                className=\"generate-button\"\n                                startIcon={<ArrowForwardIcon />}\n                            ></Button>\n                        </div>\n\n                        <Routes>\n                            <Route path=\"/generated-email\" element={<GeneratedEmailPage generatedEmail={generatedEmail} />} />\n                        </Routes>\n\n                    </Paper>\n                </Container>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}