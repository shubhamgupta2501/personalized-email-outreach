{"ast":null,"code":"import React from'react';import{useLocation}from'react-router-dom';import{Typography,Box,Container,Paper,Button}from'@mui/material';import FollowUpInput from'./FollowUpInput';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const GeneratedEmailPage=()=>{var _location$state;const location=useLocation();const emailStyle={whiteSpace:'pre-wrap',// Allow line breaks to wrap the text\noverflowWrap:'break-word'// Wrap long words\n};// Use the state if it exists, otherwise default to 'No email generated.'\nconst generatedEmail=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.generatedEmail)||'No email generated.';return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",className:\"page-container\",children:[/*#__PURE__*/_jsxs(Box,{mt:2,className:\"generated-email-box\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:\"generated-email-heading\",children:\"Generated Email\"}),/*#__PURE__*/_jsx(\"pre\",{style:emailStyle,className:\"generated-email-content\",children:generatedEmail})]}),/*#__PURE__*/_jsx(FollowUpInput,{}),\" \"]});};export default GeneratedEmailPage;","map":{"version":3,"names":["React","useLocation","Typography","Box","Container","Paper","Button","FollowUpInput","jsx","_jsx","jsxs","_jsxs","GeneratedEmailPage","_location$state","location","emailStyle","whiteSpace","overflowWrap","generatedEmail","state","maxWidth","className","children","mt","variant","style"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/components/GeneratedEmailPage.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Typography, Box, Container, Paper, Button } from '@mui/material';\nimport FollowUpInput from './FollowUpInput';\n\nconst GeneratedEmailPage = () => {\n    const location = useLocation();\n\n    const emailStyle = {\n        whiteSpace: 'pre-wrap',  // Allow line breaks to wrap the text\n        overflowWrap: 'break-word',  // Wrap long words\n    };\n\n    // Use the state if it exists, otherwise default to 'No email generated.'\n    const generatedEmail = location.state?.generatedEmail || 'No email generated.';\n  \n    return (\n        <Container maxWidth=\"md\" className=\"page-container\">\n            <Box mt={2} className=\"generated-email-box\">\n            <Typography variant=\"h5\" className=\"generated-email-heading\">Generated Email</Typography>\n            <pre style={emailStyle} className=\"generated-email-content\">{generatedEmail}</pre>\n            </Box>\n\n            <FollowUpInput /> {/* Include the FollowUpMessage component */}\n        </Container>\n        \n    );\n  };\n  \n  export default GeneratedEmailPage;\n  \n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,UAAU,CAAEC,GAAG,CAAEC,SAAS,CAAEC,KAAK,CAAEC,MAAM,KAAQ,eAAe,CACzE,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,KAAAC,eAAA,CAC7B,KAAM,CAAAC,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,UAAU,CAAG,CACfC,UAAU,CAAE,UAAU,CAAG;AACzBC,YAAY,CAAE,YAAe;AACjC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAG,EAAAL,eAAA,CAAAC,QAAQ,CAACK,KAAK,UAAAN,eAAA,iBAAdA,eAAA,CAAgBK,cAAc,GAAI,qBAAqB,CAE9E,mBACIP,KAAA,CAACP,SAAS,EAACgB,QAAQ,CAAC,IAAI,CAACC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC/CX,KAAA,CAACR,GAAG,EAACoB,EAAE,CAAE,CAAE,CAACF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAC3Cb,IAAA,CAACP,UAAU,EAACsB,OAAO,CAAC,IAAI,CAACH,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,iBAAe,CAAY,CAAC,cACzFb,IAAA,QAAKgB,KAAK,CAAEV,UAAW,CAACM,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAEJ,cAAc,CAAM,CAAC,EAC7E,CAAC,cAENT,IAAA,CAACF,aAAa,GAAE,CAAC,IAAC,EACX,CAAC,CAGlB,CAAC,CAED,cAAe,CAAAK,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}