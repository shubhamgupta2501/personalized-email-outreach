{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [messageTemplate, setMessageTemplate] = useState('');\n  const [generatedEmails, setGeneratedEmails] = useState([]);\n  const [verificationError, setVerificationError] = useState('');\n  const [newRecipient, setNewRecipient] = useState('');\n  const handleRecipientNameChange = (index, value) => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames[index] = value;\n    setRecipientNames(updatedRecipientNames);\n  };\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n  const generateEmail = () => {\n    // Validate email addresses before generating emails\n    if (recipientNames.some(name => !isValidEmail(name))) {\n      setVerificationError('Invalid email(s)');\n      setGeneratedEmails([]);\n      return;\n    }\n\n    // Use the OpenAI API to generate an email based on the prompt and message template\n    // You need to implement this part based on your project requirements\n\n    // Mock generated email content for demonstration purposes\n    const generatedEmailContents = recipientNames.map(name => {\n      return `Hello ${name},\\n\\n${messageTemplate}`;\n    });\n    setGeneratedEmails(generatedEmailContents);\n    setVerificationError('');\n  };\n  const isValidEmail = email => {\n    // Basic email verification (you can enhance this validation)\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Email Outreach Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"prompt\",\n          children: \"Enter Your Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"prompt\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          rows: \"4\",\n          placeholder: \"Enter your email prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipient-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipient-labels\",\n          children: recipientNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipient-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeRecipient(index),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-recipient\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newRecipient,\n            onChange: e => setNewRecipient(e.target.value),\n            placeholder: \"Add recipient's email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addRecipient,\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"messageTemplate\",\n        children: \"Message Template:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"messageTemplate\",\n        value: messageTemplate,\n        onChange: e => setMessageTemplate(e.target.value),\n        rows: \"4\",\n        placeholder: \"Enter your message template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateEmail,\n        children: \"Generate Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), verificationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: verificationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"generatedEmail\",\n        children: generatedEmails.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-email\",\n          children: email\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vCExZUodia0yFr/68TV/5Ryf0sk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","messageTemplate","setMessageTemplate","generatedEmails","setGeneratedEmails","verificationError","setVerificationError","newRecipient","setNewRecipient","handleRecipientNameChange","index","value","updatedRecipientNames","addRecipient","removeRecipient","splice","generateEmail","some","name","isValidEmail","generatedEmailContents","map","email","emailRegex","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","rows","placeholder","onClick","type","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [messageTemplate, setMessageTemplate] = useState('');\n    const [generatedEmails, setGeneratedEmails] = useState([]);\n    const [verificationError, setVerificationError] = useState('');\n    const [newRecipient, setNewRecipient] = useState('');\n\n    const handleRecipientNameChange = (index, value) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames[index] = value;\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const generateEmail = () => {\n        // Validate email addresses before generating emails\n        if (recipientNames.some((name) => !isValidEmail(name))) {\n            setVerificationError('Invalid email(s)');\n            setGeneratedEmails([]);\n            return;\n        }\n\n        // Use the OpenAI API to generate an email based on the prompt and message template\n        // You need to implement this part based on your project requirements\n\n        // Mock generated email content for demonstration purposes\n        const generatedEmailContents = recipientNames.map((name) => {\n            return `Hello ${name},\\n\\n${messageTemplate}`;\n        });\n\n        setGeneratedEmails(generatedEmailContents);\n        setVerificationError('');\n    };\n\n    const isValidEmail = (email) => {\n        // Basic email verification (you can enhance this validation)\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Email Outreach Generator</h1>\n            <div className=\"form\">\n                <div className=\"prompt\">\n                    <label htmlFor=\"prompt\">Enter Your Prompt:</label>\n                    <textarea\n                        id=\"prompt\"\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        rows=\"4\"\n                        placeholder=\"Enter your email prompt\"\n                    />\n                </div>\n                <div className=\"recipient-inputs\">\n                    <div className=\"recipient-labels\">\n                        {recipientNames.map((name, index) => (\n                            <div key={index} className=\"recipient-label\">\n                                <span>{name}</span>\n                                <button onClick={() => removeRecipient(index)}>X</button>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"add-recipient\">\n                        <input\n                            type=\"text\"\n                            value={newRecipient}\n                            onChange={(e) => setNewRecipient(e.target.value)}\n                            placeholder=\"Add recipient's email\"\n                        />\n                        <button onClick={addRecipient}>Add Recipient</button>\n                    </div>\n                </div>\n                <label htmlFor=\"messageTemplate\">Message Template:</label>\n                <textarea\n                    id=\"messageTemplate\"\n                    value={messageTemplate}\n                    onChange={(e) => setMessageTemplate(e.target.value)}\n                    rows=\"4\"\n                    placeholder=\"Enter your message template\"\n                />\n                <button onClick={generateEmail}>Generate Email</button>\n                {verificationError && <div className=\"error\">{verificationError}</div>}\n            </div>\n            <div className=\"result\">\n                <h2>Generated Email:</h2>\n                <div id=\"generatedEmail\">\n                    {generatedEmails.map((email, index) => (\n                        <div key={index} className=\"generated-email\">\n                            {email}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMiB,yBAAyB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAChD,MAAMC,qBAAqB,GAAG,CAAC,GAAGb,cAAc,CAAC;IACjDa,qBAAqB,CAACF,KAAK,CAAC,GAAGC,KAAK;IACpCX,iBAAiB,CAACY,qBAAqB,CAAC;EAC5C,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIN,YAAY,EAAE;MACdP,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEQ,YAAY,CAAC,CAAC;MACpDC,eAAe,CAAC,EAAE,CAAC;IACvB;EACJ,CAAC;EAED,MAAMM,eAAe,GAAIJ,KAAK,IAAK;IAC/B,MAAME,qBAAqB,GAAG,CAAC,GAAGb,cAAc,CAAC;IACjDa,qBAAqB,CAACG,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACtCV,iBAAiB,CAACY,qBAAqB,CAAC;EAC5C,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIjB,cAAc,CAACkB,IAAI,CAAEC,IAAI,IAAK,CAACC,YAAY,CAACD,IAAI,CAAC,CAAC,EAAE;MACpDZ,oBAAoB,CAAC,kBAAkB,CAAC;MACxCF,kBAAkB,CAAC,EAAE,CAAC;MACtB;IACJ;;IAEA;IACA;;IAEA;IACA,MAAMgB,sBAAsB,GAAGrB,cAAc,CAACsB,GAAG,CAAEH,IAAI,IAAK;MACxD,OAAQ,SAAQA,IAAK,QAAOjB,eAAgB,EAAC;IACjD,CAAC,CAAC;IAEFG,kBAAkB,CAACgB,sBAAsB,CAAC;IAC1Cd,oBAAoB,CAAC,EAAE,CAAC;EAC5B,CAAC;EAED,MAAMa,YAAY,GAAIG,KAAK,IAAK;IAC5B;IACA,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;EACjC,CAAC;EAED,oBACI5B,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhC,OAAA;MAAAgC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpC,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBhC,OAAA;QAAK+B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBhC,OAAA;UAAOqC,OAAO,EAAC,QAAQ;UAAAL,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDpC,OAAA;UACIsC,EAAE,EAAC,QAAQ;UACXrB,KAAK,EAAEd,MAAO;UACdoC,QAAQ,EAAGC,CAAC,IAAKpC,SAAS,CAACoC,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAE;UAC3CyB,IAAI,EAAC,GAAG;UACRC,WAAW,EAAC;QAAyB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpC,OAAA;QAAK+B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BhC,OAAA;UAAK+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC5B3B,cAAc,CAACsB,GAAG,CAAC,CAACH,IAAI,EAAER,KAAK,kBAC5BhB,OAAA;YAAiB+B,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBACxChC,OAAA;cAAAgC,QAAA,EAAOR;YAAI;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnBpC,OAAA;cAAQ4C,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAACJ,KAAK,CAAE;cAAAgB,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAFnDpB,KAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpC,OAAA;UAAK+B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1BhC,OAAA;YACI6C,IAAI,EAAC,MAAM;YACX5B,KAAK,EAAEJ,YAAa;YACpB0B,QAAQ,EAAGC,CAAC,IAAK1B,eAAe,CAAC0B,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAE;YACjD0B,WAAW,EAAC;UAAuB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACFpC,OAAA;YAAQ4C,OAAO,EAAEzB,YAAa;YAAAa,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNpC,OAAA;QAAOqC,OAAO,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1DpC,OAAA;QACIsC,EAAE,EAAC,iBAAiB;QACpBrB,KAAK,EAAEV,eAAgB;QACvBgC,QAAQ,EAAGC,CAAC,IAAKhC,kBAAkB,CAACgC,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAE;QACpDyB,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAA6B;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFpC,OAAA;QAAQ4C,OAAO,EAAEtB,aAAc;QAAAU,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtDzB,iBAAiB,iBAAIX,OAAA;QAAK+B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAErB;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNpC,OAAA;MAAK+B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBhC,OAAA;QAAAgC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpC,OAAA;QAAKsC,EAAE,EAAC,gBAAgB;QAAAN,QAAA,EACnBvB,eAAe,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEZ,KAAK,kBAC9BhB,OAAA;UAAiB+B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EACvCJ;QAAK,GADAZ,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClC,EAAA,CA7GQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA+GZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}