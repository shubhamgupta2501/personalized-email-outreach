{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Grid, TextField, Button, List, ListItem, Box, Chip } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [newRecipient, setNewRecipient] = useState('');\n  const [generatedEmail, setGeneratedEmail] = useState('');\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n  const generateEmail = () => {\n    // Implement the logic to generate emails based on the prompt and recipients.\n    // For now, we'll just set a placeholder email.\n    const modifiedEmail = `Prompt: ${prompt}\\nRecipient Names: ${recipientNames.join(', ')}\\n`;\n    setGeneratedEmail(modifiedEmail);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        className: \"heading\",\n        children: \"Personalized Email Outreach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"prompt\",\n        label: \"Enter Your Prompt\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        className: \"prompt-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        className: \"recipient-grid\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"newRecipient\",\n            label: \"Add Recipient\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: newRecipient,\n            onChange: e => setNewRecipient(e.target.value),\n            className: \"recipient-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addRecipient,\n            fullWidth: true,\n            className: \"add-button\",\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), recipientNames.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n        className: \"recipient-list\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"recipient-item\",\n          children: recipientNames.map((name, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: name,\n            onDelete: () => removeRecipient(index),\n            color: \"primary\",\n            className: \"recipient-chip\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: generateEmail,\n        fullWidth: true,\n        className: \"generate-button\",\n        children: \"Generate Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        className: \"generated-email-box\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: \"generated-email-heading\",\n          children: \"Generated Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          className: \"generated-email-content\",\n          children: generatedEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"8gZgm0ZSOGmO/uFdDCjL4SuJbpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Grid","TextField","Button","List","ListItem","Box","Chip","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","newRecipient","setNewRecipient","generatedEmail","setGeneratedEmail","addRecipient","removeRecipient","index","updatedRecipientNames","splice","generateEmail","modifiedEmail","join","maxWidth","children","elevation","className","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","id","label","fullWidth","multiline","rows","value","onChange","e","target","container","spacing","alignItems","item","xs","color","onClick","length","map","name","onDelete","mt","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container,\n    Paper,\n    Typography,\n    Grid,\n    TextField,\n    Button,\n    List,\n    ListItem,\n    Box,\n    Chip\n} from '@mui/material';\nimport './App.css';\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const generateEmail = () => {\n        // Implement the logic to generate emails based on the prompt and recipients.\n        // For now, we'll just set a placeholder email.\n        const modifiedEmail = `Prompt: ${prompt}\\nRecipient Names: ${recipientNames.join(', ')}\\n`;\n\n        setGeneratedEmail(modifiedEmail);\n    };\n\n    return (\n      <Container maxWidth=\"md\">\n          <Paper elevation={3} className=\"paper\">\n              <Typography variant=\"h4\" gutterBottom className=\"heading\">\n                  Personalized Email Outreach\n              </Typography>\n              <TextField\n                  id=\"prompt\"\n                  label=\"Enter Your Prompt\"\n                  variant=\"outlined\"\n                  fullWidth\n                  multiline\n                  rows={4}\n                  value={prompt}\n                  onChange={(e) => setPrompt(e.target.value)}\n                  className=\"prompt-input\"\n              />\n              <Grid container spacing={2} alignItems=\"center\" className=\"recipient-grid\">\n                  <Grid item xs={8}>\n                      <TextField\n                          id=\"newRecipient\"\n                          label=\"Add Recipient\"\n                          variant=\"outlined\"\n                          fullWidth\n                          value={newRecipient}\n                          onChange={(e) => setNewRecipient(e.target.value)}\n                          className=\"recipient-input\"\n                      />\n                  </Grid>\n                  <Grid item xs={4}>\n                      <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={addRecipient}\n                          fullWidth\n                          className=\"add-button\"\n                      >\n                          Add Recipient\n                      </Button>\n                  </Grid>\n              </Grid>\n              {recipientNames.length > 0 && (\n                  <List className=\"recipient-list\">\n                      <ListItem className=\"recipient-item\">\n                          {recipientNames.map((name, index) => (\n                              <Chip\n                                  key={index}\n                                  label={name}\n                                  onDelete={() => removeRecipient(index)}\n                                  color=\"primary\"\n                                  className=\"recipient-chip\"\n                              />\n                          ))}\n                      </ListItem>\n                  </List>\n              )}\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={generateEmail}\n                  fullWidth\n                  className=\"generate-button\"\n              >\n                  Generate Email\n              </Button>\n              <Box mt={2} className=\"generated-email-box\">\n                  <Typography variant=\"h6\" className=\"generated-email-heading\">Generated Email:</Typography>\n                  <Typography variant=\"body1\" className=\"generated-email-content\">{generatedEmail}</Typography>\n              </Box>\n          </Paper>\n      </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}