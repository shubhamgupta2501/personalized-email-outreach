{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Grid, TextField, Button, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [verificationError, setVerificationError] = useState('');\n  const [newRecipient, setNewRecipient] = useState('');\n  const handleRecipientNameChange = (index, value) => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames[index] = value;\n    setRecipientNames(updatedRecipientNames);\n  };\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n  const generateEmail = () => {\n    // Validate email addresses before generating emails\n    if (recipientNames.some(name => !isValidEmail(name))) {\n      setVerificationError('Invalid email(s)');\n      return;\n    }\n\n    // Implement the logic to generate emails based on the prompt and recipients\n\n    setVerificationError('');\n  };\n  const isValidEmail = email => {\n    // Basic email verification (you can enhance this validation)\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Email Outreach Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"prompt\",\n        label: \"Enter Your Prompt\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: prompt,\n        onChange: e => setPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"newRecipient\",\n            label: \"Add Recipient\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: newRecipient,\n            onChange: e => setNewRecipient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addRecipient,\n            fullWidth: true,\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), recipientNames.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n        children: recipientNames.map((name, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => removeRecipient(index),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: generateEmail,\n        fullWidth: true,\n        children: \"Generate Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), verificationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: verificationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Generated Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"kwzD+es8FqRIglf8Anlji7EA9Zg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Grid","TextField","Button","List","ListItem","ListItemText","IconButton","DeleteIcon","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","verificationError","setVerificationError","newRecipient","setNewRecipient","handleRecipientNameChange","index","value","updatedRecipientNames","addRecipient","removeRecipient","splice","generateEmail","some","name","isValidEmail","email","emailRegex","test","maxWidth","children","elevation","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","id","label","fullWidth","onChange","e","target","container","spacing","item","xs","color","onClick","length","map","primary","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container,\n    Paper,\n    Typography,\n    Grid,\n    TextField,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    IconButton,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './App.css';\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [verificationError, setVerificationError] = useState('');\n    const [newRecipient, setNewRecipient] = useState('');\n\n    const handleRecipientNameChange = (index, value) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames[index] = value;\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const generateEmail = () => {\n        // Validate email addresses before generating emails\n        if (recipientNames.some((name) => !isValidEmail(name))) {\n            setVerificationError('Invalid email(s)');\n            return;\n        }\n\n        // Implement the logic to generate emails based on the prompt and recipients\n\n        setVerificationError('');\n    };\n\n    const isValidEmail = (email) => {\n        // Basic email verification (you can enhance this validation)\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <Paper elevation={3} className=\"paper\">\n                <Typography variant=\"h4\">Email Outreach Generator</Typography>\n                <TextField\n                    id=\"prompt\"\n                    label=\"Enter Your Prompt\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={prompt}\n                    onChange={(e) => setPrompt(e.target.value)}\n                />\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <TextField\n                            id=\"newRecipient\"\n                            label=\"Add Recipient\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={newRecipient}\n                            onChange={(e) => setNewRecipient(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={addRecipient}\n                            fullWidth\n                        >\n                            Add Recipient\n                        </Button>\n                    </Grid>\n                </Grid>\n                {recipientNames.length > 0 && (\n                    <List>\n                        {recipientNames.map((name, index) => (\n                            <ListItem key={index}>\n                                <ListItemText primary={name} />\n                                <IconButton onClick={() => removeRecipient(index)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                )}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={generateEmail}\n                    fullWidth\n                >\n                    Generate Email\n                </Button>\n                {verificationError && <div className=\"error\">{verificationError}</div>}\n            </Paper>\n            <Paper elevation={3} className=\"paper\">\n                <Typography variant=\"h5\">Generated Email:</Typography>\n                {/* Display generated emails here */}\n            </Paper>\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}