{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n//import { BrowserRouter as Router, Route, Link, Routes, usenavigation } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [newRecipient, setNewRecipient] = useState('');\n  const [generatedEmail, setGeneratedEmail] = useState('');\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n\n  /*\n  const generateEmail = async () => {\n      // Prepare the data to send to the backend\n      const data = {\n          prompt: prompt,\n      };\n       // Make a POST request to your FastAPI backend\n      const response = await fetch('http://localhost:8000/generate-email', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data),\n      });\n       if (response.ok) {\n          const responseData = await response.json();\n          setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n           // Navigate to the new page\n          window.location.href = '/generated-email';\n      } else {\n          // Handle errors here\n          console.error('Failed to generate email');\n      }\n  };\n  */\n\n  const generateEmail = async () => {\n    // Prepare the data to send to the backend\n    const data = {\n      prompt: prompt\n    };\n    if (prompt) {\n      const responseData = prompt;\n      setGeneratedEmail(responseData); // Update generatedEmail with data from the backend\n\n      // Navigate to the new page\n      // return <Navigate to=\"/generated-email\" />;\n      //window.location.href = '/generated-email';\n    } else {\n      // Handle errors here\n      console.error('Failed to generate email');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          className: \"page-container\",\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            className: \"paper\",\n            children: [/*#__PURE__*/_jsxDEV(PromptInput, {\n              prompt: prompt,\n              setPrompt: setPrompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"generate-button-div\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: generateEmail,\n                className: \"generate-button\",\n                startIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 48\n                }, this),\n                children: \"Generate Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/generated-email\",\n        element: /*#__PURE__*/_jsxDEV(GeneratedEmailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8gZgm0ZSOGmO/uFdDCjL4SuJbpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Box","Button","IconButton","PromptInput","RecipientList","GeneratedEmail","Header","ArrowForwardIcon","GeneratedEmailPage","BrowserRouter","Route","Routes","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","newRecipient","setNewRecipient","generatedEmail","setGeneratedEmail","addRecipient","removeRecipient","index","updatedRecipientNames","splice","generateEmail","data","responseData","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","maxWidth","className","elevation","variant","color","onClick","startIcon","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n//import { BrowserRouter as Router, Route, Link, Routes, usenavigation } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    /*\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n            window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n    */\n\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n\n        if (prompt) {\n            const responseData = prompt;\n            setGeneratedEmail(responseData); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n           // return <Navigate to=\"/generated-email\" />;\n            //window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <Routes>\n                <Route path=\"/\" element={\n                    <Container maxWidth=\"md\" className=\"page-container\">\n                        <Paper elevation={3} className=\"paper\">\n                            <PromptInput prompt={prompt} setPrompt={setPrompt} />\n                            <div className=\"generate-button-div\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={generateEmail}\n                                    className=\"generate-button\"\n                                    startIcon={<ArrowForwardIcon />}\n                                >\n                                    Generate Email\n                                </Button>\n                            </div>\n                           \n                        </Paper>\n                    </Container>\n                } />\n                <Route path=\"/generated-email\" element={<GeneratedEmailPage />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}