{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [recipientNames, setRecipientNames] = useState([]);\n  const [newRecipient, setNewRecipient] = useState('');\n  const [generatedEmail, setGeneratedEmail] = useState('');\n  const addRecipient = () => {\n    if (newRecipient) {\n      setRecipientNames([...recipientNames, newRecipient]);\n      setNewRecipient('');\n    }\n  };\n  const removeRecipient = index => {\n    const updatedRecipientNames = [...recipientNames];\n    updatedRecipientNames.splice(index, 1);\n    setRecipientNames(updatedRecipientNames);\n  };\n  const generateEmail = async () => {\n    // Prepare the data to send to the backend\n    const data = {\n      prompt: prompt\n    };\n\n    // Make a POST request to your FastAPI backend\n    const response = await fetch('http://localhost:8000/generate-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n    } else {\n      // Handle errors here\n      console.error('Failed to generate email');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this), \" \", Header, /*#__PURE__*/_jsxDEV(PromptInput, {\n        prompt: prompt,\n        setPrompt: setPrompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecipientList, {\n        recipientNames: recipientNames,\n        removeRecipient: removeRecipient,\n        newRecipient: newRecipient,\n        setNewRecipient: setNewRecipient,\n        addRecipient: addRecipient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: generateEmail,\n        fullWidth: true,\n        className: \"generate-button\",\n        children: \"Generate Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeneratedEmail, {\n        generatedEmail: generatedEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8gZgm0ZSOGmO/uFdDCjL4SuJbpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","Box","Button","PromptInput","RecipientList","GeneratedEmail","Header","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","recipientNames","setRecipientNames","newRecipient","setNewRecipient","generatedEmail","setGeneratedEmail","addRecipient","removeRecipient","index","updatedRecipientNames","splice","generateEmail","data","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","generated_email","console","error","maxWidth","className","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","fullWidth","_c","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Paper, Typography, Box, Button } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\n\nimport './App.css';\nimport Header from './components/Header';\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n\n    return (\n        <Container maxWidth=\"md\" className=\"page-container\">\n            <Paper elevation={3} className=\"paper\">\n                 <Header /> {Header}\n                <PromptInput prompt={prompt} setPrompt={setPrompt} />\n                <RecipientList\n                    recipientNames={recipientNames}\n                    removeRecipient={removeRecipient}\n                    newRecipient={newRecipient}\n                    setNewRecipient={setNewRecipient}\n                    addRecipient={addRecipient}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={generateEmail}\n                    fullWidth\n                    className=\"generate-button\"\n                >\n                    Generate Email\n                </Button>\n                <GeneratedEmail generatedEmail={generatedEmail} />\n            </Paper>\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}