{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\n/*\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n//import { BrowserRouter as Router, Route, Link, Routes, usenavigation } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\n\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    /*\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n            window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n    \n    const navigate = useNavigate(); // Hook to navigate\n\n    const generateEmail = async () => {\n        // Your logic to call the backend and generate the email\n        const data = { prompt: prompt };\n\n        // Simulating a backend call with a timeout\n        setTimeout(() => {\n            // Suppose this is the response from your backend\n            const responseData = { generated_email: \"Email content generated from the prompt.\" };\n\n            setGeneratedEmail(responseData.generated_email);\n            // Navigate to the new page after setting the state\n            navigate('/generated-email');\n        }, 1000);\n    };\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <Routes>\n                <Route path=\"/\" element={\n                    <Container maxWidth=\"md\" className=\"page-container\">\n                        <Paper elevation={3} className=\"paper\">\n                            <PromptInput prompt={prompt} setPrompt={setPrompt} />\n                            <div className=\"generate-button-div\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={generateEmail}\n                                    className=\"generate-button\"\n                                    startIcon={<ArrowForwardIcon />}\n                                >\n                                    Generate Email\n                                </Button>\n                            </div>\n                           \n                        </Paper>\n                    </Container>\n                } />\n                <Route path=\"/generated-email\" element={<GeneratedEmailPage emailContent={generatedEmail} />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n*/\n\nimport { Container, Paper, Button } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { BrowserRouter, Routes, Route, useNavigate } from 'react-router-dom';\nimport GeneratedEmailPage from './components/GeneratedEmailPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main({\n  onGenerateEmail\n}) {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const navigate = useNavigate();\n  const generateEmail = async () => {\n    const responseData = await onGenerateEmail(prompt);\n    navigate('/generated-email', {\n      state: {\n        generatedEmail: responseData.generated_email\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(PromptInput, {\n        prompt: prompt,\n        setPrompt: setPrompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-button-div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: generateEmail,\n          className: \"generate-button\",\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 24\n          }, this),\n          children: \"Generate Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"+iJjFHfqo1o+D7jvBy8m0Ub0kaI=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nfunction App() {\n  _s2();\n  const [generatedEmail, setGeneratedEmail] = useState('');\n  const handleGenerateEmail = async prompt => {\n    const responseData = {\n      generated_email: \"Email content from the prompt.\"\n    }; // Replace with actual response\n    return responseData;\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          onGenerateEmail: handleGenerateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/generated-email\",\n        element: /*#__PURE__*/_jsxDEV(GeneratedEmailPage, {\n          emailContent: generatedEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"ldD338SwVyzzhRX5wLWqQJP6t+o=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Container","Paper","Button","PromptInput","Header","ArrowForwardIcon","BrowserRouter","Routes","Route","useNavigate","GeneratedEmailPage","jsxDEV","_jsxDEV","Main","onGenerateEmail","_s","prompt","setPrompt","navigate","generateEmail","responseData","state","generatedEmail","generated_email","maxWidth","className","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","startIcon","_c","App","_s2","setGeneratedEmail","handleGenerateEmail","path","element","emailContent","_c2","$RefreshReg$"],"sources":["/Users/shubhamgupta/Desktop/Projects/Personalized-email-outreach/frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n/*\nimport { Container, Paper, Typography, Box, Button, IconButton } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport RecipientList from './components/RecipientList';\nimport GeneratedEmail from './components/GeneratedEmail';\nimport './App.css';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n//import { BrowserRouter as Router, Route, Link, Routes, usenavigation } from 'react-router-dom'; // Import Router and related components\nimport GeneratedEmailPage from './components/GeneratedEmailPage'; // Import the new component\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\n\n\nfunction App() {\n    const [prompt, setPrompt] = useState('');\n    const [recipientNames, setRecipientNames] = useState([]);\n    const [newRecipient, setNewRecipient] = useState('');\n    const [generatedEmail, setGeneratedEmail] = useState('');\n\n\n\n    const addRecipient = () => {\n        if (newRecipient) {\n            setRecipientNames([...recipientNames, newRecipient]);\n            setNewRecipient('');\n        }\n    };\n\n    const removeRecipient = (index) => {\n        const updatedRecipientNames = [...recipientNames];\n        updatedRecipientNames.splice(index, 1);\n        setRecipientNames(updatedRecipientNames);\n    };\n\n    /*\n    const generateEmail = async () => {\n        // Prepare the data to send to the backend\n        const data = {\n            prompt: prompt,\n        };\n\n        // Make a POST request to your FastAPI backend\n        const response = await fetch('http://localhost:8000/generate-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (response.ok) {\n            const responseData = await response.json();\n            setGeneratedEmail(responseData.generated_email); // Update generatedEmail with data from the backend\n\n            // Navigate to the new page\n            window.location.href = '/generated-email';\n        } else {\n            // Handle errors here\n            console.error('Failed to generate email');\n        }\n    };\n    \n    const navigate = useNavigate(); // Hook to navigate\n\n    const generateEmail = async () => {\n        // Your logic to call the backend and generate the email\n        const data = { prompt: prompt };\n\n        // Simulating a backend call with a timeout\n        setTimeout(() => {\n            // Suppose this is the response from your backend\n            const responseData = { generated_email: \"Email content generated from the prompt.\" };\n\n            setGeneratedEmail(responseData.generated_email);\n            // Navigate to the new page after setting the state\n            navigate('/generated-email');\n        }, 1000);\n    };\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <Routes>\n                <Route path=\"/\" element={\n                    <Container maxWidth=\"md\" className=\"page-container\">\n                        <Paper elevation={3} className=\"paper\">\n                            <PromptInput prompt={prompt} setPrompt={setPrompt} />\n                            <div className=\"generate-button-div\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={generateEmail}\n                                    className=\"generate-button\"\n                                    startIcon={<ArrowForwardIcon />}\n                                >\n                                    Generate Email\n                                </Button>\n                            </div>\n                           \n                        </Paper>\n                    </Container>\n                } />\n                <Route path=\"/generated-email\" element={<GeneratedEmailPage emailContent={generatedEmail} />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n*/\n\n\nimport { Container, Paper, Button } from '@mui/material';\nimport PromptInput from './components/PromptInput';\nimport Header from './components/Header';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { BrowserRouter, Routes, Route, useNavigate } from 'react-router-dom';\nimport GeneratedEmailPage from './components/GeneratedEmailPage';\nimport './App.css';\n\nfunction Main({ onGenerateEmail }) {\n  const [prompt, setPrompt] = useState('');\n  const navigate = useNavigate();\n\n  const generateEmail = async () => {\n    const responseData = await onGenerateEmail(prompt);\n    navigate('/generated-email', { state: { generatedEmail: responseData.generated_email } });\n  };\n\n  return (\n    <Container maxWidth=\"md\" className=\"page-container\">\n      <Paper elevation={3} className=\"paper\">\n        <PromptInput prompt={prompt} setPrompt={setPrompt} />\n        <div className=\"generate-button-div\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={generateEmail}\n            className=\"generate-button\"\n            startIcon={<ArrowForwardIcon />}\n          >\n            Generate Email\n          </Button>\n        </div>\n      </Paper>\n    </Container>\n  );\n}\n\nfunction App() {\n  const [generatedEmail, setGeneratedEmail] = useState('');\n\n  const handleGenerateEmail = async (prompt) => {\n    const responseData = { generated_email: \"Email content from the prompt.\" }; // Replace with actual response\n    return responseData;\n  };\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Main onGenerateEmail={handleGenerateEmail} />} />\n        <Route path=\"/generated-email\" element={<GeneratedEmailPage emailContent={generatedEmail}/>}  />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}